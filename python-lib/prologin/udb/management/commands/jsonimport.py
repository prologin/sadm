import argparse
import json
import subprocess

from django.db import transaction
from django.core.management import BaseCommand

from prologin.udb.models import User

DEFAULT_TYPE = 'user'
USER_TYPES = [t[0] for t in User.TYPES]
assert DEFAULT_TYPE in USER_TYPES


def generate_password(length):
    return (
        subprocess.check_output(['pwgen', '-cnB', str(length)])
        .strip()
        .decode('utf-8')
    )


class Command(BaseCommand):
    def add_arguments(self, parser):
        parser.add_argument(
            'file', type=argparse.FileType('r'), help="The JSON file to import"
        )
        parser.add_argument(
            '--type',
            default=DEFAULT_TYPE,
            choices=USER_TYPES,
            help="Group type",
        )
        parser.add_argument(
            '--pwdlen',
            type=int,
            default=8,
            help="Password length of autogenerated password if "
            "not present in the file",
        ),

    def handle(self, *args, **options):
        with transaction.atomic():
            for item in json.load(options['file']):
                try:
                    pswd = item['password']
                except KeyError:
                    pswd = generate_password(options['pwdlen'])
                user = User(
                    pk=item['id'],
                    login=item['username'],
                    password=pswd,
                    firstname=item['first_name'].title(),
                    lastname=item['last_name'].title(),
                    group=options['type'],
                )
                self.stdout.write(
                    "Adding {} {:>8} {:<20} {:<20} {}".format(
                        options['type'],
                        user.id,
                        user.login,
                        user.lastname,
                        user.firstname,
                    )
                )
                user.save()
        self.stdout.write("All users added successfully.")
